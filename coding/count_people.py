#!/usr/bin/env python# -*- coding: utf-8 -*-# @Time    : 2018/8/3 下午11:46# @Author  : ziyi# @File    : create_news.py# @Software: PyCharmimport datetimeimport pandas as pdimport copyimport itchat, timeimport pymysql# 创建数据库def cre_db(host, user, pw, name):    try:        # 数据库连接        db = pymysql.connect(host, user, pw, charset='utf8')        # 创建游标，通过连接与数据通信        cursor = db.cursor()        # 执行sql语句        cursor.execute('show databases')        rows = cursor.fetchall()        for row in rows:            tmp = "{}".format(row)            print(tmp)            # 判断数据库是否存在            if name == tmp:                cursor.execute('drop database if exists ' + name)            else:                cursor.execute('create database if not exists ' + name)                # 提交到数据库执行                db.commit()    except pymysql.Error as e:        print("Mysql Error {}: {}".format(e.args[0], e.args[1]))    finally:        # 关闭数据库连接        db.close()def creat_table(db_host, db_user, db_password, db_database, table_name):    db = pymysql.connect(db_host, db_user, db_password, db_database)    cursor = db.cursor()    cursor.execute('DROP TABLE IF EXISTS {}'.format(table_name))    create_sql = """CREATE TABLE {} (roomname CHAR(20), id CHAR(50) NOT NULL, nickname CHAR(20), province CHAR(    20),city CHAR(20), SEX CHAR(1))""".format(table_name)    cursor.execute(create_sql)    # 关闭数据库连接    db.close()def insert_data(db_host, db_user, db_password, db_database, table_name):    db = pymysql.connect(db_host, db_user, db_password, db_database, use_unicode=True, charset='utf8')    cursor = db.cursor()    insert_sql = """INSERT INTO {}(roomname,            id, nickname, province, city,SEX) VALUES ('Mac', 'Mohan', 20, 'M', 2000)""".format(table_name)    try:        # 执行sql语句        cursor.execute(insert_sql)        # 提交到数据库执行        db.commit()    except:        # 如果发生错误则回滚        db.rollback()    db.close()def getroom_message(roomname):    #获取群的username，对群成员进行分析需要用到    itchat.dump_login_status() # 显示所有的群聊信息，默认是返回保存到通讯录中的群聊    RoomList = itchat.search_chatrooms(name=roomname)    if RoomList is None:        print("%s group is not found!" % (name))    else:        return RoomList[0]['UserName']def getchatrooms():    #获取群聊列表    roomslist = itchat.get_chatrooms()    #print(roomslist)    return roomslistdef get_contents1(path):    # 取消替换空格    send_contents = None    try:        with open(path, encoding='utf16') as f:            contents = f.readlines()        send_contents = ''.join(content for content in contents)    except Exception as e:        pass    try:        with open(path, encoding='utf8') as f:            contents = f.readlines()        send_contents = ''.join(content for content in contents)    except Exception as e:        print('不是utf8的编码格式')    return send_contents# for i in getchatrooms():#     roomslist.append(i['NickName'])def write_people():    total = 0    with open('../data/count/member_count_{}.txt'.format(datetime.date.today()), 'a', encoding='utf-8')as f:        for i, n in enumerate(roomslist):            ChatRoom = itchat.update_chatroom(getroom_message(n), detailedMember=True)            f.write('\n')            f.write("第 {} 个群聊名称为： {} ".format(i+1, n)+'\n')            f.write("用户总数为： {} ".format(len(ChatRoom['MemberList']))+'\n')            total = total + len(ChatRoom['MemberList'])            # f.write("累计用户数为： {} ".format(total)）            f.write("目前累计的用户数为： {} ".format(total)+'\n'+'\n')            if i+1 == len(roomslist):                f.write("总的用户数为： {} ".format(total) + '\n' + '\n')            for j, m in enumerate(ChatRoom['MemberList']):                #print (i['Province']+":",i['NickName'])                f.write("第 {} 个用户信息为： ".format(j+1) + m['Alias'] + ":" + m['Province'] + ":" + m['NickName'] + '\n')                print('正在写入第 {} 个群           '.format(i+1) + m['Alias'] + ":" + m['Province'] + ":", m['NickName'],                      m['Sex'], m['City'])        f.close()def add_people(table_name):    total = 0    content = {}    df = pd.DataFrame({})    for chatrooms in getchatrooms():        roomslist.append(chatrooms['NickName'])    for i, room_name in enumerate(roomslist):        ChatRoom = itchat.update_chatroom(getroom_message(room_name), detailedMember=True)        total = total + len(ChatRoom['MemberList'])        print("目前累计的用户数为： {} ".format(total))        content['roomname'] = room_name        for j, user in enumerate(ChatRoom['MemberList']):            content['nickname'] = user['NickName']            content['province'] = user['Province']            content['city'] = user['City']            content['sex'] = user['Sex']  #1男，2女，0未定义            content['id'] = user['UserName']            print("第 {} 个群的 第 {} 个用户".format(i+1, j+1), content)            df = df.append(content, ignore_index=True)            db = pymysql.connect(db_host, db_user, db_password, db_database, use_unicode=True, charset='utf8mb4')            cursor = db.cursor()            insert_sql = """INSERT INTO {}(roomname,id, nickname, province, city,SEX) VALUES ({},{},{},{},{},            {})""".format(table_name, repr(content['roomname']), repr(content['id']),repr(content['nickname']),repr(content['province']),repr(content['city']), repr(content['sex']))            try:                # 执行sql语句                cursor.execute(insert_sql)                print('插入数据', j+1)                # 提交到数据库执行                db.commit()            except Exception as e:                # 如果发生错误则回滚                print('没有插入数据,可能有重复', e)                db.rollback()            db.close()    return dfdef save_info(contents):    df = pd.DataFrame()    df = df.append(copy.deepcopy(contents))    df.to_csv('../data/count/member_count_{}.csv'.format(datetime.date.today()), encoding='utf8', mode='a')def analysis_people():    with open('../data/count/member_count_{}.txt'.format(datetime.date.today())) as f:        f1 = f.readlines()        for x in f1:            """这里读到的每一行内容，你就可以进行自己的处理了"""            x.split(':')  # 文本分割，以table键分割        return f1if __name__ == '__main__':    roomslist = []    itchat.auto_login(hotReload=True)    # itchat.auto_login()    db_host = 'localhost'    db_user = 'root'    db_password = 'woaini36588'    db_database = 'userdb'    table_name = 'user_infor'    # cre_db(db_host, db_user, db_password, db_database)    # creat_table(db_host, db_user, db_password, db_database)    peoples = add_people(table_name)    # save_info(peoples)